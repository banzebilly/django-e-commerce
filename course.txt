tell django settings that u re using custom model on the settings.py:
                 AUTH_USER_MODEL = 'accounts.Account'

==============================================================================

desplay product by categoy
-----------------------------------------------------------------------------------------------------------
ceate a url ;
 #desplay products by category
    path('<slug:category_slug>/', views.store, name='product_by_category'),

====================================================================================
view.py:
    from django.shortcuts import render, get_object_or_404
    from .models import Product, PCategory

    # Create your views here.

    def store(request, category_slug=None):

        categories = None
        products = None
        #check if there is something in the slug
        if category_slug is not None:
            categories = get_object_or_404(PCategory, slug=category_slug)
            products = Product.objects.filter(category=categories, is_available=True)
            product_count = products.count()

        else:
    #-------------------------------------------endof product by categories-----------------------------------------------------------    
            products = Product.objects.all().filter(is_available=True)
        product_count = products.count()
        context = {
                'products': products,
                'product_count': product_count,
            }
            return render(request, 'store/store.html', context)

-------------------------------============================================================
in the store app create a file called context_processors.py:
       from .models import PCategory

def menu_links(request):
    links = PCategory.objects.all()
    return {'links': links}

---------------------------------------------------------------------------------=============
got to settings.py include it on the template sections
        TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                  # Custom context processor
                'store.context_processors.menu_links',
                # 'cart.context_processors.counter',
            ],
        },
    },
]



python manage.py shell
>>> from django.core.cache import cache
>>> cache.clea()



PAYPAL GATEWAY INTEGRATION
CREAT A DIV WITH AN ID OF 
<div id="paypal-button-container>



</div>

below paste the script: in order to render a button
<script>
    // Wait for the PayPal SDK to load
    document.addEventListener('DOMContentLoaded', function() {
        console.log('PayPal script loaded.');
        paypal.Buttons({
            // Configure the payment
            createOrder: function(data, actions) {
                console.log('Creating order for amount:', '{{ grand_total }}');
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: '{{ grand_total }}' // Use the grand total amount dynamically
                        }
                    }]
                });
            },

            // Finalize the transaction after payer approval
            onApprove: function(data, actions) {
                return actions.order.capture().then(function(details) {
                    alert('Transaction completed by ' + details.payer.name.given_name);
                });
            },

            // Handle payment error
            onError: function(err) {
                console.error('An error occurred during the transaction', err);
            }
        }).render('#paypal-button-container');
    });
</script>


get paypal url and past it in your base.hthl
 <script src="https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID&currency=USD"></script>


 in order to generate django javascripts CSRFToken you need to type
 function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            // Does this cookie string begin with the name we want?
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}
const csrftoken = getCookie('csrftoken');